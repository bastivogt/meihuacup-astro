---
import LayoutPage from "../../../layout/LayoutPage.astro";
import Heading from "../../../components/base/Heading.astro";
import Section from "../../../components/base/Section.astro";
import SectionInner from "../../../components/base/SectionInner.astro";
import ButtonOutlineWhite from "../../../components/base/ButtonOutlineWhite.astro";
import ButtonOutlinePurple from "../../../components/base/ButtonOutlinePurple.astro";
import { getlangFromUrl } from "../../../_utils";
import { getRelativeLocaleUrl } from "astro:i18n";

import { getCollection } from "astro:content";
import P from "../../../components/base/P.astro";

import { getFormattedDate } from "../../../_utils";

const lang = getlangFromUrl(new URL(Astro.request.url));

const news = await getCollection("news").then((res) =>
    res.filter((item) => item.data.published && item.id.split("/")[0] === lang)
);

//console.log(news);

const newsSortedByDate = news.sort((a, b) => {
    return b.data.date.valueOf() - a.data.date.valueOf();
});

const trans = {
    de: {
        more: "Mehr",
    },
    en: {
        more: "More",
    },
};
---

<LayoutPage title="News" description="News" headerTitle="News" lang={lang}>
    {
        newsSortedByDate.map((item, index) => {
            return (
                <Section
                    class={`${index % 2 === 0 ? "bg-purple-100 text-gray-800" : "bg-purple-2 text-white"}`}
                >
                    <SectionInner>
                        <time
                            class="text-sm"
                            datetime={item.data.date.toDateString()}
                        >
                            {getFormattedDate(item.data.date, lang)}
                        </time>
                        <hr
                            class={`w-12 mb-8 mt-3 ${index % 2 === 0 ? "border-gray-800" : "border-white"}`}
                        />
                        <Heading tag="h2">{item.data.title}</Heading>
                        <P>
                            <div>{item.data.excerpt}</div>
                        </P>
                        <div class="mt-12">
                            {index % 2 === 0 ? (
                                <ButtonOutlinePurple
                                    href={`${getRelativeLocaleUrl(lang, "news")}/${item.slug}`}
                                >
                                    {trans[lang].more}
                                </ButtonOutlinePurple>
                            ) : (
                                <ButtonOutlineWhite
                                    href={`${getRelativeLocaleUrl(lang, "news")}/${item.slug}`}
                                >
                                    {trans[lang].more}
                                </ButtonOutlineWhite>
                            )}
                        </div>
                    </SectionInner>
                </Section>
            );
        })
    }
</LayoutPage>
